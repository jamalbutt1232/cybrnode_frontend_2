{"version":3,"sources":["components/tabs_nav/TabPlaylist.js","components/tabs_nav/TabAddDevices.js","components/Utils/Utils.js","components/TabSingleDevice.js","components/TabContentDevices.js","components/tabs_nav/TabDevicesDetail.js","components/TabContentDevicesDetail.js","components/TabSingleVideo.js","components/TabContentVideos.js","components/tabs_nav/TabChannel.js","components/TabSingleChannel.js","components/TabChannelDetail.js","components/TabSinglePlaylist.js","components/TabPlaylistDetail.js","components/Schedule.js","components/navbar.js","components/TabComponent.js","pages/index.js","App.js","serviceWorker.js","index.js","images/cybrnode-logo.png"],"names":["TabChannelDetail","TabAddDevices","getIpaddress","a","api","channels","getServiceData","url","data","undefined","resp","axios","get","console","log","error","postServiceData","params","post","deleteServiceData","delete","putServiceData","put","addPlaylist","getAllPlaylists","getAllMedia","addScheduledEvent","id","response","uploadFile","getScehdaulsForChannel","updateSchedule","deleteSchedule","getAllDevices","addNewDevice","getAllChannels","addNewChannel","TabSingleDevice","props","state","channelList","then","setState","className","this","name","type","data-toggle","aria-haspopup","aria-expanded","aria-labelledby","map","channel","href","Component","TabContentDevices","selectedOption","deviceList","key","location","handleChange","setName","e","target","value","setKey","setLocation","RegisterNewDevice","Alert","fire","icon","title","text","statusText","devices","device","data-target","tabindex","role","aria-hidden","data-dismiss","aria-label","placeholder","onChange","bind","onClick","TabDevicesDetail","label","TabSingleVideo","width","height","controls","src","TabContentVideos","onChangeHandler","event","files","selectedFile","loaded","onClickHandler","preventDefault","FormData","append","status","window","reload","mediaList","media","TabSingleChannel","TabContentChannelDetail","channelsList","to","pathname","_id","TabSinglePlaylist","handleChangeComplete","color","background","hex","mediaData","mediaSelected","playlistName","mediaFiles","i","length","push","options","isMulti","findByKey","item","AddnewPlaylist","playListData","playlist","onChangeComplete","Calendar","calendarComponentRef","React","createRef","eventClick","html","start","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","cancelButtonText","result","_def","publicId","remove","eventReceive","arg","test","scheduledPlayList","start_time","_instance","range","toUTCString","end_time","end","appendToScheduledEvent","drop","endDelta","sourceId","appendToUpdateEvent","eventResized","onSave","obj","dataObj","saved","onUpdate","req","update","calendarEvents","events","scheduledEvents","updatedEvents","channelId","d","t","Date","lastSunday","setDate","getDate","getDay","getLastSunday","nextSunday","getTime","date","schedule","CalendarState","current","getApi","currentDate","populateCalendar","playlists","prevState","draggableEl","document","getElementById","Draggable","itemSelector","eventData","eventEl","getAttribute","concat","objUpdate","Row","Col","align","defaultView","header","left","center","right","ignoreTimezone","rerenderDelay","eventDurationEditable","editable","droppable","defaultDate","eventResizableFromStart","plugins","dayGridPlugin","timeGridPlugin","interactionPlugin","ref","weekends","calendarWeekends","eventDrop","eventDragStop","eventChanged","eventResize","navbar","require","activeClassName","TabComponent","tabIndex","path","component","TabPlaylistDetail","Schedule","Main","App","Boolean","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.d7f18aae.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function TabChannelDetail() {\r\n    return (\r\n        <div>\r\n            <h3><center>Playlist</center></h3>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function TabAddDevices() {\r\n    return (\r\n        <div >\r\n            <h3><center>Add Devices</center></h3>\r\n                    \r\n        </div>\r\n    )\r\n}\r\n","\nimport axios from 'axios'\n\nconst getIpaddress = async()=>{\n\n    //let resp = await axios.get(\"http://127.0.0.1:4202/getip\")\n\n    return \"35.226.22.56\" +\":4202\"\n\n}\n\nlet api = \"/api/\"\nlet media = 'medias/'\nlet upload= 'upload/'\nlet playlist = 'playlists/'\nlet scheduledplaylist = 'schedules/'\nlet device = 'devices/'\nlet channels = 'channels/'\n\n\n\nconst getServiceData = async (url,data=undefined) => {\n        \n    try {\n        \n        let resp=null;\n         if(data === undefined)resp=  await axios.get(url)\n         else{\n               resp=  await axios.get(url,data) \n                console.log(resp)\n            }\n        return resp\n        \n    \n    }\n                  \n    catch (error) {\n\n        console.error(error)\n        return null;\n\n    }\n      \n};\n\nconst postServiceData = async (url, params) => {\n    \n    try {\n        return await axios.post(url,params)\n        }         \n    \n    catch (error) {\n     \n        console.error(error)\n        return null;\n  \n    }\n    \n};\n\nconst deleteServiceData = async(url) => {\n\n\n    try {\n        \n        let resp=  await axios.delete(url)\n        \n        return resp\n        \n    \n    }\n                  \n    catch (error) {\n\n        console.error(error)\n        return null;\n\n    }\n\n};\n\nconst putServiceData = async (url, params) => {\n    \n    try {\n        return await axios.put(url,params)\n      \n        }         \n    \n    catch (error) {\n     \n        console.error(error)\n        return null;\n  \n    }\n    \n};\n\n\nconst addPlaylist = async (data)=>{\n\n    let url =  \"http://\"+ await getIpaddress()+\"/api/\" + playlist\n    return postServiceData(url,data)\n}\n\n\n\n\nconst getAllPlaylists = async (data)=>{\n    let url =  \"http://\"+ await getIpaddress()+\"/api/\" + playlist\n\n    let resp= getServiceData(url)\n   \n    return resp\n\n\n}\n\n\n\n\nconst getAllMedia = async (data)=>{\n    let url =  \"http://\"+ await getIpaddress()+\"/api/\" + media\n\n    let resp= getServiceData(url)\n   \n    return resp\n\n\n}\n\nconst deleteMedia = async(id)=>{\n    \n    let url =  \"http://\"+ await getIpaddress()+\"/api/\" + media+id\n    console.log(url)\n\n    return deleteServiceData(url)\n\n}\n\n\n\n\nconst addScheduledEvent = async(id,data)=>{\n\n    let url =  \"http://\"+ await getIpaddress()+\"/api/\"+channels+id+\"/\"+ scheduledplaylist\n    let response = postServiceData(url,data);\n\n    return response\n}\n\n\nconst uploadFile = async (data)=>{\n    \n    let url = \"http://\"+ await getIpaddress()+\"/api/\" + media +upload\n\n    console.log(url)\n\n    let response = postServiceData(url,data);\n    \n    console.log(response)\n    \n    return response\n\n}\n\nconst getScehdauls = async (date1,date2)=>{\n    console.log(\"THIS BC URL: \",'http://'+await getIpaddress()+api+scheduledplaylist+'/from/'+date1+'/to/'+date2)\n\n    return axios.get('http://'+await getIpaddress()+api+scheduledplaylist+'/from/'+date1+'/to/'+date2)\n}\n\nconst getScehdaulsForChannel = async(id)=>{\n\n    //\"api/channels/channelId/shedule\"\n    \n    console.log(\"THIS BC URL: \",'http://'+await getIpaddress()+api+channels+id+\"/\"+scheduledplaylist)\n\n\n    return axios.get('http://'+await getIpaddress()+api+channels+id+\"/\"+scheduledplaylist)\n\n\n\n}\n\nconst updateSchedule = async(id,data)=>{\n\n    //\"api/channels/channelId/shedule\"\n\n\n    let url =  'http://'+await getIpaddress()+api+channels+id+\"/\"+scheduledplaylist+id\n\n    return putServiceData(url,data)\n}\n\n\nconst deleteSchedule = async(id) => {\n\n    let url =  'http://'+await getIpaddress()+api+channels+id+\"/\"+scheduledplaylist+id\n\n    return deleteServiceData(url)\n}\n\n\nconst getAllDevices = async()=>{\n    \n    let url =  \"http://\"+ await getIpaddress()+\"/api/\" + device\n\n    return getServiceData(url)\n\n}\n\nconst addNewDevice = async(data)=>{\n    \n    let url =  \"http://\"+ await getIpaddress()+\"/api/\" + device\n\n    return postServiceData(url,data)\n\n}\n\n\n\nconst getAllChannels = async()=>{\n    \n    let url = \"http://\"+ await getIpaddress()+\"/api/\" + channels\n\n    return getServiceData(url)\n}\n\n\n\nconst addNewChannel = async(data)=>{\n    \n    let url = \"http://\"+ await getIpaddress()+\"/api/\" + channels\n\n    return postServiceData(url,data)\n\n}\n\nconst updateChannel = async(id,data)=>{\n    \n    let url = \"http://\"+ await getIpaddress()+\"/api/\" + channels+id\n    console.log(url)\n\n    return putServiceData(url,data)\n\n}\n\nconst deleteChannel = async(id)=>{\n    \n    let url = \"http://\"+ await getIpaddress()+\"/api/\" + channels+id\n    console.log(url)\n\n    return deleteServiceData(url)\n\n}\n\n\n\n\nexport  { \n\n\n        uploadFile,getAllMedia,deleteMedia,\n\n        addPlaylist,getAllPlaylists,\n          \n        addScheduledEvent,getScehdaulsForChannel,getScehdauls,updateSchedule,deleteSchedule,\n         \n        getAllDevices,addNewDevice,\n        \n        getAllChannels,addNewChannel,updateChannel,deleteChannel\n    \n\n        };\n","import React, {Component} from 'react'\r\n\r\nimport {getAllChannels} from './Utils/Utils.js'\r\n\r\nexport default class TabSingleDevice extends Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            channelList: []\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n\r\n        getAllChannels().then(channels=>{\r\n\r\n            console.log(channels.data)\r\n\r\n            this.setState({channelList:channels.data})\r\n\r\n        })\r\n    }\r\n\r\n    render() {\r\n        \r\n        return (\r\n            <div>\r\n                <div className=\"card cardsDevicesList\">\r\n                <div className=\"card-body\">\r\n    \r\n                    <h6 className=\"card-subtitle mb-2 text-muted\">{this.props.name}</h6>                               \r\n                    <div className=\"dropdown\">\r\n                        <button className=\"btn btn-secondary dropdown-toggle btn-sm\" \r\n                        type=\"button\" id=\"dropdownMenuButton\" \r\n                        data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                            Select Channel\r\n                        </button>\r\n                        <span className=\"dot\"></span>\r\n    \r\n                        <span>\r\n                            <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\r\n                            {this.state.channelList.map(channel=>{\r\n\r\n                                return  <a className=\"dropdown-item\" href=\"#\">{channel.name}</a>\r\n\r\n                            })} \r\n\r\n                            </div>\r\n    \r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n                \r\n        </div>\r\n        )\r\n    }\r\n\r\n}\r\n","import React, { Component } from 'react'\r\nimport  TabAddDevices from './tabs_nav/TabAddDevices'\r\nimport TabSingleDevice from './TabSingleDevice'\r\n\r\nimport '../css/TabsNav.css'\r\nimport {addNewDevice,getAllDevices} from './Utils/Utils.js'\r\n// import styled from 'styled-components'\r\nimport Alert from \"sweetalert2\";\r\n\r\n\r\nexport default class TabContentDevices extends Component{\r\n    state = {\r\n        selectedOption: null,\r\n        deviceList:[],\r\n        name:\"\",\r\n        key:\"\",\r\n        location:\"\"\r\n\r\n    };\r\n\r\n\r\n    componentDidMount(){\r\n\r\n        getAllDevices().then(devices=>{\r\n\r\n            console.log(devices.data)\r\n\r\n            this.setState({deviceList:devices.data})\r\n\r\n\r\n        })\r\n\r\n\r\n    }\r\n\r\n    handleChange = selectedOption => {\r\n        this.setState({ selectedOption });\r\n        console.log(`Option selected:`, selectedOption);\r\n    };\r\n\r\n    setName = (e) => {\r\n\r\n        this.setState({name: e.target.value})\r\n\r\n    }\r\n\r\n    setKey = (e) => {\r\n\r\n        this.setState({key: e.target.value})\r\n\r\n    }\r\n\r\n    setLocation = (e) => {\r\n\r\n        this.setState({location: e.target.value})\r\n\r\n    }\r\n\r\n    RegisterNewDevice = () => {\r\n\r\n        let data ={};\r\n\r\n        if(this.state.name ===\"\" && this.state.key===\"\" && this.state.location===\"\"){\r\n\r\n            Alert.fire({\r\n                icon: 'error',\r\n                title: 'Oops...',\r\n                text: 'Something went wrong!',\r\n              })\r\n\r\n\r\n        }\r\n\r\n        else{\r\n\r\n            data = {name:this.state.name, key:this.state.key, location:this.state.location}\r\n            addNewDevice(data).then(data=>{\r\n                console.log(data)\r\n\r\n            if(data.statusText==\"OK\"){\r\n                \r\n            Alert.fire({\r\n                icon: 'success',\r\n                title: 'New Entry',\r\n                text: 'New Device Added',\r\n              })\r\n\r\n            }\r\n\r\n            else{\r\n\r\n                Alert.fire({\r\n                    icon: 'error',\r\n                    title: 'Something went wrong...',\r\n                    text: 'Try again',\r\n                  })\r\n\r\n            }\r\n\r\n\r\n\r\n            })\r\n\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    \r\n\r\n    render() {\r\n        const { selectedOption } = this.state;\r\n        return (\r\n\r\n            <div className=\"container\">\r\n                <TabAddDevices/>\r\n                <hr/>\r\n                <div className=\"row\">\r\n                    <div className=\"col-lg-4\">\r\n\r\n\r\n                    {this.state.deviceList.map(device=>{\r\n\r\n                        return     <TabSingleDevice name={device.name}/>\r\n                    \r\n\r\n                    })} \r\n\r\n                    </div>\r\n\r\n                    <button type=\"button\" className=\"btn btn-primary addNewDeviceButton\" data-toggle=\"modal\" data-target=\"#add_new_device\">\r\n                    + Add new\r\n                    </button>\r\n\r\n\r\n                    <div className=\"modal fade\" id=\"add_new_device\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n                    <div className=\"modal-dialog\" role=\"document\">\r\n                        <div className=\"modal-content\">\r\n                        <div className=\"modal-header\">\r\n                            <h4 className=\"modal-title newDeviceModal\" id=\"exampleModalLabel\">New device</h4>\r\n                            <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                            <span aria-hidden=\"true\">&times;</span>\r\n                            </button>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <form>\r\n                                <div className=\"form-group\">\r\n                                    <label>Key</label>\r\n                                    <input type=\"text\" className=\"form-control\" placeholder=\"Enter key\" onChange={this.setKey.bind(this)}/>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label>Name</label>\r\n                                    <input type=\"text\" className=\"form-control\" placeholder=\"Enter device name\" onChange={this.setName.bind(this)}/>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label>Location</label>\r\n                                    <input type=\"text\" className=\"form-control\" placeholder=\"Location address\" onChange={this.setLocation.bind(this)}/>\r\n                                </div>\r\n                                <div className=\"modal-footer\">\r\n                                    <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n                                    <button type=\"button\" className=\"btn btn-primary\" onClick={this.RegisterNewDevice.bind(this)}>Save changes</button>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                \r\n            </div>\r\n\r\n          \r\n                );\r\n    }\r\n}","import React from 'react'\r\n\r\nexport default function TabDevicesDetail() {\r\n    return (\r\n        <div>\r\n            <h3><center>Device Detail</center></h3>\r\n        </div>\r\n    )\r\n}\r\n","\r\nimport React, { Component } from 'react'\r\nimport Select from 'react-select';\r\nimport TabDevicesDetail from './tabs_nav/TabDevicesDetail'\r\n\r\nimport '../css/TabsNav.css'\r\nconst channelList = [\r\n    { value: 'chocolate', label: 'Chocolate' },\r\n    { value: 'strawberry', label: 'Strawberry' },\r\n    { value: 'vanilla', label: 'Vanilla' },\r\n];\r\n\r\n\r\n\r\nexport default class TabContentDevices extends Component{\r\n    constructor(props){\r\n        super(props)\r\n            this.state= {\r\n                devicesdata:[1,2]\r\n            }\r\n    }\r\n    state = {\r\n        selectedOption: null,\r\n    };\r\n    handleChange = selectedOption => {\r\n        this.setState({ selectedOption });\r\n        console.log(`Option selected:`, selectedOption);\r\n    };\r\n    render() {\r\n        const { selectedOption } = this.state;\r\n    return (\r\n\r\n        <div className=\"tabcontent\">\r\n\r\n            <div className=\"container formForAddingDevices\">\r\n                <TabDevicesDetail></TabDevicesDetail>\r\n                <hr/>\r\n                <div className=\"row\">\r\n                    <div className=\" col-lg-8\">\r\n                        <div className=\"tab-content\">\r\n                            <h1><center><i>Device Details</i></center></h1>\r\n                            \r\n                            {/* start forms here for new device */}\r\n                            <form>\r\n                                <div className=\"form-group\">\r\n                                    <label>Device name</label>\r\n                                    <input type=\"text\" className=\"form-control\">devicesdata.name</input>\r\n                                </div>\r\n\r\n                                <label>Channel name</label>\r\n                                <div className=\"form-group\"> \r\n                                    <Select \r\n                                    value={selectedOption}\r\n                                    onChange={this.handleChange}\r\n                                    options={channelList}\r\n                                    isMulti= {false}\r\n                                    placeholder = {'Select Channel'}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label>Location name</label>\r\n                                    <input type=\"text\" className=\"form-control\" placeholder=\"Enter location\" >devicesdata.location</input>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label>Key</label>\r\n                                    <input type=\"text\" className=\"form-control\" placeholder=\"key will come here\" readOnly>devicesdata.key</input>\r\n                                </div>\r\n                                \r\n                                <button type=\"submit\" className=\"btn btn-primary submitButtonAddingDevices\">Save</button>\r\n                                </form>\r\n                                \r\n                            {/* ends here */}\r\n\r\n                        </div>\r\n                    </div>\r\n                    <div className= \"screenshotImage col-lg-4\">\r\n                        <div className=\"card\">\r\n                            <img className=\"card-img-top\" \r\n                            src=\"\r\n                            https://dad.neocities.org/resources/dog7.jpg\r\n                            \" />\r\n                        </div> \r\n                    </div>\r\n                    </div>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n    }\r\n}\r\n\r\n\r\n","import React, { Component } from 'react'\n\n\nexport default class TabSingleVideo extends Component{\n\n\n    render() {\n\n        return (\n\n            <div className=\"card-group\">\n            <div className=\"card\">\n              \n            <video width=\"320\" height=\"240\" controls>\n              <source src=\"//‪video.mp4\" type=\"video/mp4\" />\n            </video>\n\n\n\n              <div className=\"card-body\">\n                <center><h5 className=\"card-title\">{this.props.name}</h5></center>\n              </div>\n\n            </div>\n          </div>\n        )\n\n    }\n}","import React, { Component } from 'react'\r\nimport '../css/TabsNav.css'\r\nimport TabSingleVideo from './TabSingleVideo.js'\r\nimport  TabAddDevices from './tabs_nav/TabAddDevices'\r\n\r\nimport {getAllMedia,uploadFile} from \"./Utils/Utils.js\"\r\nimport Alert from \"sweetalert2\";\r\n\r\n\r\n\r\nexport default class TabContentVideos extends Component {\r\n\r\n\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      mediaList: [],\r\n      selectedFile:null\r\n    }\r\n  }\r\n\r\n\r\n  componentDidMount() {\r\n\r\n    getAllMedia().then(media => {\r\n\r\n      console.log(media)\r\n\r\n      this.setState({mediaList:media.data})\r\n\r\n    })\r\n\r\n\r\n  }\r\n\r\n\r\n  onChangeHandler=event=>{\r\n\r\n\r\n    console.log(event.target.files[0])\r\n    this.setState({\r\n        selectedFile: event.target.files[0],\r\n        loaded: 0,\r\n      },()=>{ \r\n        console.log(this.state)\r\n      })\r\n\r\n}\r\n\r\n  onClickHandler = (e) => {\r\n\r\n    e.preventDefault()  \r\n\r\n    if(this.state.selectedFile === null){\r\n\r\n      Alert.fire({\r\n        icon: 'error',\r\n        title: 'Oops...',\r\n        text: 'Seems like you missed a few fields !'\r\n      })\r\n\r\n    }\r\n\r\n\r\n    else{\r\n\r\n  \r\n      const data = new FormData() \r\n      data.append('file', this.state.selectedFile)\r\n      uploadFile(data).then(data=>{\r\n\r\n        console.log(\"DATA\",data)\r\n\r\n        if(data.status===200){\r\n\r\n          window.location.reload()\r\n\r\n        }\r\n\r\n        else{\r\n          Alert.fire({\r\n            icon: 'error',\r\n            title: 'Oops...',\r\n            text: 'Something went wrong check your internet connection!'\r\n          })\r\n\r\n      }\r\n\r\n\r\n    })\r\n    \r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"container\">\r\n          <TabAddDevices/>\r\n          <hr/>\r\n          <div className=\"row\">\r\n\r\n          {this.state.mediaList.map(media =>{\r\n\r\n            \r\n            return <TabSingleVideo name={media.name}/>\r\n\r\n\r\n          })}\r\n\r\n          </div>\r\n          <button type=\"button\" className=\"btn btn-primary addNewDeviceButton\" data-toggle=\"modal\" data-target=\"#add_new_device\">\r\n                + Add new video\r\n          </button>\r\n\r\n\r\n          <div className=\"modal fade\" id=\"add_new_device\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n          <div className=\"modal-dialog\" role=\"document\">\r\n            <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n                <h4 className=\"modal-title newDeviceModal\" id=\"exampleModalLabel\">New device</h4>\r\n                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n            <form>\r\n            <input type=\"file\" name=\"file\" onChange={this.onChangeHandler}/>\r\n              <hr/>\r\n              <div className=\"modal-footer\">\r\n                  <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n                  <button type=\"button\" className=\"btn btn-primary\" onClick={this.onClickHandler}>Upload</button>\r\n              </div>\r\n            </form>\r\n            </div>\r\n          </div></div></div>\r\n          </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\n\nexport default function TabChannelDetail() {\n    return (\n        <div>\n            <h3><center>Channel</center></h3>\n        </div>\n    )\n}\n","import React , {Component} from 'react'\r\n\r\nexport default class TabSingleChannel extends Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n    }\r\n\r\n\r\n    render(){\r\n        \r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-lg-4\">\r\n                        <div className=\"card cardsDevicesList\">\r\n                            <div className=\"card-body\">\r\n    \r\n                                <h6 className=\"card-subtitle mb-2 text-muted\">{this.props.name}</h6>                               \r\n                                \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>            \r\n            </div>\r\n        )\r\n\r\n    }\r\n}\r\n","import React, { Component } from 'react'\nimport { Link,Switch , Route} from 'react-router-dom'\n\nimport TabChannel from '../components/tabs_nav/TabChannel'\nimport {getAllChannels,addNewChannel,updateChannel,deleteChannel} from  './Utils/Utils.js'\nimport '../css/TabsNav.css'\nimport TabSingleChannel from './TabSingleChannel'\nimport Alert from \"sweetalert2\";\n\n\nlet mediaList = [];\n\nexport default class TabContentChannelDetail extends Component {\n    constructor(props){\n        super(props)\n        this.state= {\n\n            channelsList:[1,2,3,4,5]\n\n      \n        }\n    }\n\n\n    componentDidMount() {\n\n        getAllChannels().then(data=>{\n\n            console.log(\"THIS IS THE DATA \",data.data)\n\n            this.setState({channelsList:data.data})\n        })\n        \n    }\n\n    setName = (e) => {\n\n        this.setState({name: e.target.value})\n    \n    }\n    \n   \n    \n    RegisterNewDevice = () => {\n    \n        let data ={};\n    \n        if(this.state.name ===\"\" && this.state.key===\"\" && this.state.location===\"\"){\n    \n            Alert.fire({\n                icon: 'error',\n                title: 'Oops...',\n                text: 'Something went wrong!',\n              })\n    \n    \n        }\n    \n        else{\n    \n            data = {name:this.state.name}\n            addNewChannel(data).then(data=>{\n                console.log(data)\n    \n            if(data.statusText==\"OK\"){\n                \n            Alert.fire({\n                icon: 'success',\n                title: 'New Entry',\n                text: 'New Device Added',\n              })\n    \n            }\n    \n            else{\n    \n                Alert.fire({\n                    icon: 'error',\n                    title: 'Something went wrong...',\n                    text: 'Try again',\n                  })\n    \n            }\n    \n    \n    \n            })\n    \n    \n        }\n    \n    \n    }\n \n    render() {\n        return (\n\n            <div>\n                <TabChannel/>\n                <hr/>\n                  {this.state.channelsList.map(channel=>{\n\n                    return(        <Link to={{pathname:\"/schedule\",\n                    \n                                    state: {\n                                        _id: channel._id\n                                        }\n                                        \n                                        \n                     }} >\n                        \n\n                                           <TabSingleChannel name={channel.name}/>\n\n\n                                    </Link>) \n\n                    })} \n\n\n                    \n                    <button type=\"button\" className=\"btn btn-primary addNewDeviceButton\" data-toggle=\"modal\" data-target=\"#add_new_device\">\n                    + Add new\n                    </button>\n\n\n                    <div className=\"modal fade\" id=\"add_new_device\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n                        <div className=\"modal-dialog\" role=\"document\">\n                            <div className=\"modal-content\">\n                            <div className=\"modal-header\">\n                                <h4 className=\"modal-title newDeviceModal\" id=\"exampleModalLabel\">New device</h4>\n                                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                <span aria-hidden=\"true\">&times;</span>\n                                </button>\n                            </div>\n                            <div className=\"modal-body\">\n                                <form>\n                                    \n                                    <div className=\"form-group\">\n                                        <label>Name</label>\n                                        <input type=\"text\" className=\"form-control\" placeholder=\"Enter device name\" onChange={this.setName.bind(this)}/>\n                                    </div>\n                                  \n                                    <div className=\"modal-footer\">\n                                        <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\n                                        <button type=\"button\" className=\"btn btn-primary\" onClick={this.RegisterNewDevice.bind(this)}>Save changes</button>\n                                    </div>\n                                </form>\n                            </div>\n\n                        </div>\n                    </div>\n                    </div>\n\n            </div>\n     \n\n        )\n    }\n}\n","import React, { Component } from 'react'\r\nimport { CirclePicker } from 'react-color';\r\nimport Select from 'react-select';\r\nimport TabPlaylist from '../components/tabs_nav/TabPlaylist'\r\nimport {getAllMedia} from  './Utils/Utils.js'\r\n\r\nimport '../css/TabsNav.css'\r\n\r\nlet mediaList = [\r\n];\r\n\r\nexport default class TabSinglePlaylist extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state= {\r\n            // playListData:PlayList\r\n         \r\n            mediaData:[],\r\n            mediaSelected:[],\r\n            playlistName:\"\"\r\n        }\r\n    }\r\n    handleChangeComplete = (color) => {\r\n        this.setState({ background: color.hex });\r\n    };\r\n    handleChange = selectedOption => {\r\n        this.setState({ selectedOption });\r\n        console.log(`Option selected:`, selectedOption);\r\n    };\r\n    componentDidMount() {\r\n\r\n\r\n        getAllMedia().then(media => {\r\n\r\n            console.log(media)\r\n\r\n            this.setState({mediaData:media.data})\r\n\r\n            let mediaFiles ={value:\"\",label:\"\"};\r\n\r\n            for(let i=0;i<media.data.length;i++){\r\n\r\n                mediaFiles['value'] = media.data[i]._id\r\n                mediaFiles['label'] = media.data[i].name\r\n\r\n                mediaList.push(mediaFiles)\r\n\r\n                mediaFiles ={value:\"\",label:\"\"};\r\n\r\n            }\r\n\r\n            console.log(\"Media List \",mediaList)\r\n\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { selectedOption } = this.state;\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"card cardsDevicesList\">\r\n                    <div className=\"card-body\">\r\n                        \r\n\r\n                    <button type=\"button\" className=\"btn btn-light btn-for-playlist\" data-toggle=\"modal\" data-target=\"#playlist_details\">\r\n                        {this.props.name}\r\n                    </button>\r\n\r\n\r\n                    <div className=\"modal fade\" id=\"playlist_details\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n                    <div className=\"modal-dialog\" role=\"document\">\r\n                        <div className=\"modal-content\">\r\n                        <div className=\"modal-body\">\r\n                        <form>\r\n\r\n                            <div className=\"form-group\">\r\n                                <label>                        \r\n                                    {this.props.name}\r\n                                </label>\r\n                                <input type=\"text\" className=\"form-control\" value={'here value will come safi'} />\r\n                            </div>\r\n                            <hr/>\r\n                            <label>Edit media</label>\r\n                            <div className=\"form-group\"> \r\n                                <Select \r\n                                value={selectedOption}\r\n                                onChange={this.handleChange}\r\n                                options={mediaList}\r\n                                isMulti= {true}\r\n                                placeholder = {'Choose videos'}\r\n                                />\r\n                            </div>\r\n                            <hr/>\r\n\r\n\r\n                            <div className=\"modal-footer\">\r\n                                <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n                                <button type=\"button\" className=\"btn btn-primary\">Update</button>\r\n                            </div>\r\n                        </form>\r\n                        </div>\r\n                    </div></div></div>\r\n    \r\n                    </div>\r\n                </div>\r\n\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { CirclePicker } from 'react-color';\r\nimport Select from 'react-select';\r\nimport TabPlaylist from '../components/tabs_nav/TabPlaylist'\r\nimport TabSinglePlaylist from './TabSinglePlaylist.js'\r\nimport {getAllPlaylists,addPlaylist,getAllMedia} from  './Utils/Utils.js'\r\nimport '../css/TabsNav.css'\r\n\r\n\r\nlet mediaList = [\r\n];\r\n\r\nexport default class TabContentChannelDetail extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state= {\r\n            // playListData:PlayList\r\n            selectedOption: null,\r\n            background: '#fff',\r\n            playListData : [],\r\n            mediaData:[],\r\n            mediaSelected:[],\r\n            playlistName:\"\"\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n\r\n        getAllPlaylists().then(playlist => {\r\n\r\n            console.log(playlist.data)\r\n\r\n            this.setState({playListData:playlist.data})\r\n\r\n        })\r\n\r\n\r\n        getAllMedia().then(media => {\r\n\r\n            console.log(media)\r\n\r\n            this.setState({mediaData:media.data})\r\n\r\n            let mediaFiles ={value:\"\",label:\"\"};\r\n\r\n            for(let i=0;i<media.data.length;i++){\r\n\r\n                mediaFiles['value'] = media.data[i]._id\r\n                mediaFiles['label'] = media.data[i].name\r\n\r\n                mediaList.push(mediaFiles)\r\n\r\n                mediaFiles ={value:\"\",label:\"\"};\r\n\r\n            }\r\n\r\n            console.log(\"Media List \",mediaList)\r\n\r\n        })\r\n    }\r\n\r\n\r\n\r\n    setName=(e) => {\r\n\r\n        console.log(e.target.value)\r\n        this.setState({playlistName:e.target.value})\r\n    }\r\n\r\n    findByKey =(key, value) =>{\r\n        return (item, i) => item[key] === value\r\n    }\r\n\r\n\r\n    AddnewPlaylist=()=>{\r\n\r\n       let data={}\r\n\r\n        if(this.state.playlistName===\"\", this.state.selectedOption==null){\r\n\r\n        }\r\n\r\n        else{\r\n\r\n            let media =[]\r\n\r\n            for(let i=0;i<this.state.selectedOption.length;i++){\r\n            \r\n                media.push(this.state.selectedOption[i][\"value\"])\r\n\r\n            }\r\n\r\n            console.log(media)\r\n\r\n            data  = {name:this.state.playlistName,color:this.state.background,media:media}\r\n\r\n            addPlaylist(data)\r\n\r\n            }\r\n            \r\n            \r\n        }\r\n\r\n    \r\n\r\n    handleChangeComplete = (color) => {\r\n        this.setState({ background: color.hex });\r\n    };\r\n    handleChange = selectedOption => {\r\n        this.setState({ selectedOption });\r\n        console.log(`Option selected:`, selectedOption);\r\n\r\n    };\r\n    render() {\r\n        const { selectedOption } = this.state;\r\n        return (\r\n            <div className=\"container\">\r\n                <TabPlaylist></TabPlaylist>\r\n                <hr/>\r\n                <div className=\"row\">\r\n                    <div className=\"col-lg-4\">\r\n                            {this.state.playListData.map(playlist =>{\r\n\r\n                                return <TabSinglePlaylist name ={playlist.name} />\r\n\r\n                    \r\n                            })}\r\n     \r\n                    </div>\r\n                </div>\r\n            <button type=\"button\" className=\"btn btn-primary addNewDeviceButton\" data-toggle=\"modal\" data-target=\"#add_new_playlist\">\r\n                + Create new PlayList\r\n            </button>\r\n\r\n\r\n                    <div className=\"modal fade\" id=\"add_new_playlist\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n                    <div className=\"modal-dialog\" role=\"document\">\r\n                        <div className=\"modal-content\">\r\n                        <div className=\"modal-header\">\r\n                            <h4 className=\"modal-title newDeviceModal\" id=\"exampleModalLabel\">New PlayList</h4>\r\n                            <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                            <span aria-hidden=\"true\">&times;</span>\r\n                            </button>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                        <form>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label>Name : </label>\r\n                            <input type=\"text\" className=\"form-control\" placeholder=\"Enter playlist name\" onChange={this.setName.bind(this)} />\r\n                        </div>\r\n                        <hr/>\r\n                        <div className=\"form-group\">\r\n                            <label>Color : </label>\r\n                            <CirclePicker className=\"colorPickerInPlayList\"\r\n                                    color={ this.state.background }\r\n                                    onChangeComplete={ this.handleChangeComplete }\r\n                            />\r\n                        </div>\r\n                        <label>Select media</label>\r\n                        <div className=\"form-group\"> \r\n                            <Select \r\n                            value={selectedOption}\r\n                            onChange={this.handleChange}\r\n                            options={mediaList}\r\n                            isMulti= {true}\r\n                            placeholder = {'Choose videos'}\r\n                            />\r\n                        </div>\r\n                        <hr/>\r\n\r\n\r\n                        <div className=\"modal-footer\">\r\n                            <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n                            <button type=\"button\" className=\"btn btn-primary\" onClick={this.AddnewPlaylist.bind(this)}>Upload</button>\r\n                        </div>\r\n                        </form>\r\n                        </div>\r\n                    \r\n                    </div>\r\n                    \r\n                    </div>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\nimport { Col, Row } from \"react-bootstrap\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport interactionPlugin, { Draggable } from \"@fullcalendar/interaction\";\nimport Alert from \"sweetalert2\";\nimport \"@fullcalendar/core/main.css\";\nimport \"@fullcalendar/daygrid/main.css\";\nimport \"@fullcalendar/timegrid/main.css\";\nimport { getAllPlaylists,addScheduledEvent,getScehdaulsForChannel,updateSchedule,deleteSchedule} from  './Utils/Utils.js'\nimport './CalenderStyles.css'\n\n\nclass Calendar extends Component {\n\n  calendarComponentRef = React.createRef();\n\n  constructor(props){\n    super(props)\n    \n      this.state = {\n        calendarEvents: [],\n        events: [],\n        scheduledEvents: [],\n        updatedEvents: [],\n        channelId:\"\"\n      };\n  }\n\n\n  getLastSunday(d){\n    var t = new Date(d);\n    var lastSunday = t.setDate(t.getDate() - t.getDay());\n\n    console.log(lastSunday)\n\n    return t;\n  }\n\n\n  getNextSunday(d){\n\n    var t = this.getLastSunday(d)\n    var nextSunday = new Date(t.getTime()+ + 7 * 24 * 60 * 60 * 1000)\n    console.log(nextSunday)\n\n    return nextSunday;\n  }\n\n\n  populateCalendar(date){\n\n    getScehdaulsForChannel(this.props.location.state._id)\n    .then(\n      data=>{\n\n        console.log(\"OK\",data)\n\n        let obj = {id:\"\",title:\"\",start:null,end:null,playlist:\"\"};\n\n        let schedule = []\n\n        for(let i = 0; i <data.data.length; i++){\n\n          obj.id = data.data[i]._id\n          obj.playlist=data.data[i].playlist._id\n          obj.title = data.data[i].playlist.name\n          obj.start = data.data[i].start_time\n          obj.end = data.data[i].end_time\n\n          schedule.push(obj)\n\n          obj = {id:\"\",title:\"\",start:null,end:null};\n        }\n        this.setState({calendarEvents : schedule})\n\n\n      })\n  }\n\n  componentDidMount() {\n\n    this.setState({channelId:this.props.location.state._id})\n\n    console.log(this.props.location.state._id)\n\n    let CalendarState = this.calendarComponentRef.current.getApi().state;\n    \n    CalendarState.currentDate = new Date();\n    \n    let date  =CalendarState.currentDate  \n\n    console.log(date)\n\n\n    this.populateCalendar(date)\n\n    getAllPlaylists().then(data=>{\n\n        //TODO make this into a funtion\n\n        let obj = {id:\"\",title:\"\",color:\"\"};\n\n        let playlists = [];\n\n        for(let i=0; i<data.data.length; i++){\n\n            obj.id  = data.data[i]._id;\n            obj.title =data.data[i].name;\n            obj.color = data.data[i].color;\n\n            playlists.push(obj)\n            obj = {id:\"\",title:\"\",color:\"\"};\n          }\n\n\n        //-------------------------\n\n        this.setState((prevState) => ({\n          \n          events: playlists\n            \n          }), \n          \n          () => {\n          \n              console.log('After Element added', this.state);\n          \n              }); \n      })\n\n    let draggableEl = document.getElementById(\"external-events\");\n    \n    new Draggable(draggableEl, {\n \n      itemSelector: \".fc-event\",\n      eventData: function(eventEl) {\n\n        let title = eventEl.getAttribute(\"title\");\n        let id = eventEl.getAttribute(\"data\");\n    \n        return {\n \n          title: title,\n          id: id\n \n        };\n \n      }\n \n    });\n\n  }\n\n  eventClick = eventClick => {\n    \n    Alert.fire({\n      title: eventClick.event.title,\n      html:\n        `<div class=\"table-responsive\">\n      <table class=\"table\">\n      <tbody>\n      <tr >\n      <td>Title</td>\n      <td><strong>` +\n        eventClick.event.title +\n        `</strong></td>\n      </tr>\n      <tr >\n      <td>Start Time</td>\n      <td><strong>\n      ` +\n        eventClick.event.start +\n        `\n      </strong></td>\n      </tr>\n      </tbody>\n      </table>\n      </div>`,\n\n      showCancelButton: true,\n      confirmButtonColor: \"#d33\",\n      cancelButtonColor: \"#3085d6\",\n      confirmButtonText: \"Remove Event\",\n      cancelButtonText: \"Close\"\n    })\n    .then(result => {\n        if (result.value) {\n    \n          let id = eventClick.event._def.publicId\n\n          deleteSchedule(id).then(data => {\n\n\n            if(data !==null) {\n\n            \n            if(data.status === 200){\n              eventClick.event.remove(); // It will remove event from the calendar\n              Alert.fire(\"Deleted!\", \"Your Event has been deleted.\", \"success\");\n            }\n            else{\n              Alert.fire(\"Could not delete!\", \"Check Internet connection and try again.\", \"failed\"); \n            }\n\n          }\n\n          else{\n            Alert.fire(\"Could not delete!\", \"Something went wrong try reloading the page.\", \"failed\"); \n            \n          }\n          })\n\n        }\n      });\n    };\n\n\n  appendToScheduledEvent(event,arg) {\n    let obj =  arg;\n\n    this.setState((prevState) => ({\n      scheduledEvents: prevState.scheduledEvents.concat(event)\n\n    }), \n    \n    () => {\n        console.log('After scheduledPlayList added', this.state);\n        this.onSave(event,obj)\n      }); \n    \n  }\n\n\n  appendToUpdateEvent(objUpdate){\n\n    this.setState((prevState) => ({\n      updatedEvents: prevState.updatedEvents.concat(objUpdate)\n\n    }), \n    \n    () => {\n        console.log('After scheduledPlayList added', this.state);\n        this.onUpdate(objUpdate)\n      }); \n\n  }\n  \n  eventReceive = (arg) => { // bind with an arrow function\n    \n    console.log(\"eventRecived Called\", arg);\n\n     let test=arg.event\n     let start=(test._instance.range.start).toUTCString()+\"+0500\";\n     let end=(test._instance.range.end).toUTCString()+\"+0500\";\n\n\n     let scheduledPlayList = {\n       start_time: start,\n       end_time: end,\n       playlist: test._def.publicId,\n     }    \n    this.appendToScheduledEvent(scheduledPlayList,arg)\n  }\n\n  drop = (arg) => { // bind with an arrow function\n    console.log(\"dropped called\",arg)\n    console.log(\"Delta Date: \",arg.endDelta)\n    console.log(\"ID: \",arg.event._def.publicId)\n\n    console.log(arg)\n\n    let start =  arg.event._instance.range.start.toUTCString()+\"+0500\"\n    let end =  arg.event._instance.range.end.toUTCString()+\"+0500\"\n    let id = arg.event._def.sourceId\n\n    if(id==\"1\"){\n      id = arg.event._def.publicId;\n    }\n\n    let scheduledPlayList = {\n      start_time: start,\n      end_time: end,\n      _id: id\n    }    \n   this.appendToUpdateEvent(scheduledPlayList)\n    \n  }\n\n   \n\n\n  eventResized = (arg) => {\n    console.log(\"eventResized called\",arg)\n    console.log(\"Delta Date: \",arg.endDelta)\n    console.log(\"ID: \",arg.event._def.publicId)\n    console.log(\"new Range: \", arg.event._instance.range)\n\n    let start =  arg.event._instance.range.start.toUTCString()+\"+0500\"\n    let end =  arg.event._instance.range.end.toUTCString()+\"+0500\"\n    let id = arg.event._def.sourceId\n\n    console.log(arg)\n\n\n    if(id==\"1\"){\n      id = arg.event._def.publicId;\n    }\n\n    let scheduledPlayList = {\n      start_time: start,\n      end_time: end,\n      _id: id\n    }    \n    this.appendToUpdateEvent(scheduledPlayList)\n  }\n\n  onSave = async (event,obj) => {\n      \n        console.log(event)\n\n        let dataObj = await addScheduledEvent(this.props.location.state._id,event)\n\n            obj.event._def.sourceId =   dataObj.data.saved._id ;\n\n        console.log(\"ID AFTER\", obj.event._def.sourceId)      \n        \n  }  \n\n\n\n  onUpdate= (req) =>{\n\n    console.log(\"ON UPDATE  \",req)\n    let update = {\n      start_time:req.start_time,  \n      end_time:req.end_time,\n    }\n\n    console.log(\"UPDATED: \", req)\n\n    updateSchedule(req._id,update).then(data=>{\n      console.log(data)\n    })\n\n\n  }\n\n  render() {\n    return (\n      <div className=\"animated fadeIn p-4 demo-app\" >\n        <Row>\n\n        <Col>\n          \n          <button id=\"SaveButton\" >Save</button>\n          \n        </Col>\n\n\n\n        </Row>\n\n\n        <Row>\n\n\n\n          <Col >\n            <div\n              id=\"external-events\"\n            >\n              <p align=\"center\">\n                <strong> Playlists</strong>\n              </p>\n              {this.state.events.map(event => (\n                <div\n                  className=\"fc-event\"\n                  title={event.title}\n                  data={event.id}\n                  key={event.id}\n                  id={event.id+\" playlist\"}\n                >\n                  {event.title}\n                </div>\n              ))}\n            </div>\n          </Col>\n\n\n\n          <Col>\n            <div className=\"demo-app-calendar\" id=\"mycalendartest\">\n              <FullCalendar\n                defaultView=\"timeGridWeek\"\n                header={{\n                  left: \"prev,next today\",\n                  center: \"title\",\n                  right: \"timeGridWeek,timeGridDay,listWeek\"\n                }}\n               \n                ignoreTimezone={true}\n                rerenderDelay={0}\n                eventDurationEditable={true}\n                editable={true}\n                droppable={true}\n                defaultDate={new Date()}\n                eventResizableFromStart = {true}\n                plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}\n                ref={this.calendarComponentRef}\n                weekends={this.state.calendarWeekends}\n                events={this.state.calendarEvents}\n                eventDrop={this.drop}\n                eventDragStop =  {this.eventChanged}\n                eventResize = {this.eventResized}\n                eventReceive={this.eventReceive}\n                eventClick={this.eventClick}\n              />\n            </div>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nexport default Calendar;","import React from 'react'\r\nimport {Link ,NavLink } from 'react-router-dom'\r\n\r\n\r\nexport default function navbar() {\r\n    return (\r\n        <nav>\r\n\r\n\r\n            <div className=\"wrapper\">\r\n            <div className=\"sidebar\">\r\n                <img src={require('../images/cybrnode-logo.png')} width=\"200px\" />\r\n                <hr/>\r\n                    <div className = \"col-lg-4\">\r\n                        <ul className=\"nav-links\">\r\n                            <li className=\"link-wrapper\">\r\n                                <NavLink to=\"/devicesDetail\" activeClassName=\"active\">\r\n                                    Driver\r\n                                </NavLink>\r\n                            </li>\r\n                            <li className=\"link-wrapper\">\r\n                                <NavLink to=\"/mediaDetail\" activeClassName=\"active\">\r\n                                    Videos\r\n                                </NavLink>\r\n                            </li>\r\n                            <li className=\"link-wrapper\">\r\n                                <NavLink to=\"/playListDetail\" activeClassName=\"active\">\r\n                                    Playlist\r\n                                </NavLink>\r\n                            </li>\r\n                            <li className=\"link-wrapper\">\r\n                                <NavLink to=\"/channelDetail\" activeClassName=\"active\">\r\n                                    Channel\r\n                                </NavLink>\r\n                            </li>\r\n                        </ul>    \r\n                    </div> \r\n                </div>\r\n            </div> \r\n        </nav>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nimport { Tab, Tabs,TabList ,TabPanel } from \"react-tabs\";\r\n\r\nimport TabPlaylist from './tabs_nav/TabPlaylist'\r\nimport '../css/TabsNav.css'\r\nimport TabContentDevices from './TabContentDevices';\r\nimport TabContentDevicesDetail from './TabContentDevicesDetail';\r\nimport TabContentVideos from './TabContentVideos';\r\nimport TabChannelDetail from './TabChannelDetail';\r\nimport {cybrnodelogo} from '../images/cybrnode-logo.png'\r\nimport TabPlaylistDetail from './TabPlaylistDetail'\r\nimport Schedule from './Schedule'\r\n\r\nimport Nav from './navbar'\r\nimport {BrowserRouter as Router,Switch, Route } from 'react-router-dom'\r\n\r\nexport default class TabComponent extends Component {\r\n    state ={\r\n        tabIndex : 0\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Router>\r\n                    <Nav/>\r\n                    <Switch>\r\n                        <Route path=\"/devicesDetail\" component={TabContentDevices}/>\r\n                        <Route path=\"/mediaDetail\" component={TabContentVideos}/>\r\n                        <Route path=\"/playListDetail\" component={TabPlaylistDetail}/>\r\n                        <Route path=\"/channelDetail\" component={TabChannelDetail}/>\r\n                        <Route path=\"/channelDetail\" component={TabChannelDetail}/>\r\n                        <Route path=\"/schedule\" component={Schedule}/>\r\n\r\n                    </Switch>\r\n    \r\n                </Router>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","// Our main component\r\n// we will render all our components here : header, tabs, footer\r\n\r\n\r\nimport React, { Component } from 'react'\r\nimport  TabComponent from '../components/TabComponent'\r\n\r\nexport default class Main extends Component {\r\n    render() {\r\n        return (\r\n            <TabComponent/>\r\n            \r\n        )\r\n    }\r\n}\r\n","import React from 'react';\nimport './css/App.css';\n\nimport Main from './pages/index'\nimport Schedule from './components/Schedule.js'\n\nimport { Switch , Route} from 'react-router-dom'\n\nfunction App() {\n  return (\n    <Switch>\n      <Route path=\"/\" component={Main} />\n      \n    </Switch>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.css'\nimport 'bootstrap/dist/js/bootstrap.js'\nimport 'bootstrap/dist/js/bootstrap.min.js'\nimport 'bootstrap/dist/js/bootstrap.bundle.js'\n\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter as Router} from 'react-router-dom';\n\n\nReactDOM.render(\n\n    <Router>\n        <App />\n    </Router>\n    \n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/cybrnode-logo.c283d22b.png\";"],"sourceRoot":""}