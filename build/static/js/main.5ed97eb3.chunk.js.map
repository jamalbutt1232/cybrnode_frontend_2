{"version":3,"sources":["components/tabs_nav/TabPlaylist.js","components/tabs_nav/TabAddDevices.js","components/Utils/Utils.js","components/TabSingleDevice.js","components/TabContentDevices.js","components/tabs_nav/TabDevicesDetail.js","components/TabContentDevicesDetail.js","components/TabSingleVideo.js","components/TabContentVideos.js","components/tabs_nav/TabChannel.js","components/TabSingleChannel.js","components/TabChannelDetail.js","components/TabSinglePlaylist.js","components/TabPlaylistDetail.js","components/Schedule.js","components/navbar.js","components/TabComponent.js","pages/index.js","App.js","serviceWorker.js","index.js","images/cybrnode-logo.png"],"names":["TabChannelDetail","TabAddDevices","getIpaddress","a","resp","console","log","data","ip","api","channels","getServiceData","url","undefined","axios","get","error","postServiceData","params","post","deleteServiceData","delete","putServiceData","put","displayMessageOnNewEntry","statusText","Alert","fire","icon","title","text","setTimeout","window","location","reload","addPlaylist","deletePlaylist","id","getAllPlaylists","getAllMedia","addScheduledEvent","response","uploadFile","getScehdaulsForChannel","updateSchedule","deleteSchedule","getAllDevices","getDeviceStatus","key","addNewDevice","getAllChannels","addNewChannel","deleteChannel","TabSingleDevice","props","state","channelList","then","setState","this","setInterval","className","name","type","data-toggle","aria-haspopup","aria-expanded","aria-labelledby","map","channel","href","Component","TabContentDevices","selectedOption","deviceList","handleChange","setName","e","target","value","setLocation","RegisterNewDevice","devices","device","data-target","tabindex","role","aria-hidden","data-dismiss","aria-label","placeholder","onChange","bind","onClick","TabDevicesDetail","label","TabSingleVideo","width","height","controls","src","TabContentVideos","onChangeHandler","event","files","selectedFile","loaded","onClickHandler","preventDefault","FormData","append","mediaList","media","TabSingleChannel","onDelete","channel_id","to","pathname","_id","TabContentChannelDetail","channelsList","TabSinglePlaylist","handleChangeComplete","color","background","hex","mediaData","mediaSelected","playlistName","mediaFiles","i","length","push","options","isMulti","findByKey","item","AddnewPlaylist","playListData","playlist","onChangeComplete","Calendar","calendarComponentRef","React","createRef","eventClick","html","start","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","cancelButtonText","result","_def","publicId","status","remove","eventReceive","arg","test","scheduledPlayList","start_time","_instance","range","toUTCString","end_time","end","appendToScheduledEvent","drop","endDelta","sourceId","appendToUpdateEvent","eventResized","onSave","obj","dataObj","saved","onUpdate","req","update","calendarEvents","events","scheduledEvents","updatedEvents","channelId","d","t","Date","lastSunday","setDate","getDate","getDay","getLastSunday","nextSunday","getTime","date","schedule","CalendarState","current","getApi","currentDate","populateCalendar","playlists","prevState","draggableEl","document","getElementById","Draggable","itemSelector","eventData","eventEl","getAttribute","concat","objUpdate","Row","Col","align","defaultView","header","left","center","right","ignoreTimezone","rerenderDelay","eventDurationEditable","editable","droppable","defaultDate","eventResizableFromStart","plugins","dayGridPlugin","timeGridPlugin","interactionPlugin","ref","weekends","calendarWeekends","eventDrop","eventDragStop","eventChanged","eventResize","navbar","require","activeClassName","TabComponent","tabIndex","path","component","TabPlaylistDetail","Schedule","Main","App","Boolean","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.5ed97eb3.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function TabChannelDetail() {\r\n    return (\r\n        <div>\r\n            <h3><center>Playlist</center></h3>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function TabAddDevices() {\r\n    return (\r\n        <div >\r\n            <h3><center>Add Devices</center></h3>\r\n                    \r\n        </div>\r\n    )\r\n}\r\n","\nimport axios from 'axios'\nimport Alert from \"sweetalert2\";\n\n\nlet deployed=true;\n\nconst getIpaddress = async()=>{\n\n\n    if (!deployed){\n        \n            let resp = await axios.get(\"http://127.0.0.1:4202/getip\")\n        \n            console.log(resp)\n\n            return resp.data.ip +\":4202\"\n    }\n\n    else{\n        return \"35.226.22.56\" +\":4202\"\n    \n    }\n\n}\n\nlet api = \"/api/\"\nlet media = 'medias/'\nlet upload= 'upload/'\nlet playlist = 'playlists/'\nlet scheduledplaylist = 'schedules/'\nlet device = 'devices/'\nlet channels = 'channels/'\n\n\n\nconst getServiceData = async (url,data=undefined) => {\n\n    //console.log(\"get requests to: \"+url)\n        \n    try {\n        \n        let resp=null;\n         if(data === undefined)resp=  await axios.get(url)\n         else{\n               resp=  await axios.get(url,data) \n                console.log(resp)\n            }\n        return resp\n        \n    \n    }\n                  \n    catch (error) {\n\n        console.error(error)\n        return null;\n\n    }\n      \n};\n\nconst postServiceData = async (url, params) => {\n\n    console.log(\"post requests to: \"+url)\n\n    \n    try {\n        return await axios.post(url,params)\n        }         \n    \n    catch (error) {\n     \n        console.error(error)\n        return null;\n  \n    }\n    \n};\n\nconst deleteServiceData = async(url) => {\n\n    console.log(\"get requests to: \"+url)\n\n    try {\n        \n        let resp=  await axios.delete(url)\n        \n        return resp\n        \n    \n    }\n                  \n    catch (error) {\n\n        console.error(error)\n        return null;\n\n    }\n\n};\n\nconst putServiceData = async (url, params) => {\n\n    console.log(\"get requests to: \"+url)\n\n    try {\n        return await axios.put(url,params)\n      \n        }         \n    \n    catch (error) {\n     \n        console.error(error)\n        return null;\n  \n    }\n    \n};\n\n\n\nconst displayMessageOnNewEntry = (data)=>{\n\n    if (data!==null){\n\n        if(data.statusText==\"OK\"){\n    \n            Alert.fire({\n                icon: 'success',\n                title: 'New Entry',\n                text: 'New Device Added',\n              })\n\n              setTimeout(()=>{ \n\n                window.location.reload();\n\n             }, \n             \n             1000);\n\n\n            }\n\n            else{\n\n                Alert.fire({\n                    icon: 'error',\n                    title: 'Something went wrong...',\n                    text: 'Try again',\n                  })\n\n            }\n\n    }\n\n\n    else {\n        Alert.fire({\n            icon: 'error',\n            title: 'Looks like we ran into a problem...',\n            text: 'Try again',\n          })\n\n    }\n\n\n};\n\nconst addPlaylist = async (data)=>{\n\n    let url =  \"http://\"+ await getIpaddress()+\"/api/\" + playlist\n    return postServiceData(url,data)\n}\n\n\nconst deletePlaylist = async(id)=>{\n\n    let url =  \"http://\"+ await getIpaddress()+\"/api/\" + playlist+id\n    return deleteServiceData(url)\n\n\n}\n\nconst getAllPlaylists = async (data)=>{\n    let url =  \"http://\"+ await getIpaddress()+\"/api/\" + playlist\n\n    let resp= getServiceData(url)\n   \n    return resp\n\n\n}\n\n\n\n\nconst getAllMedia = async (data)=>{\n    let url =  \"http://\"+ await getIpaddress()+\"/api/\" + media\n\n    let resp= getServiceData(url)\n   \n    return resp\n\n\n}\n\nconst deleteMedia = async(id)=>{\n    \n    let url =  \"http://\"+ await getIpaddress()+\"/api/\" + media+id\n    console.log(url)\n\n    return deleteServiceData(url)\n\n}\n\n\n\n\nconst addScheduledEvent = async(id,data)=>{\n\n    let url =  \"http://\"+ await getIpaddress()+\"/api/\"+channels+id+\"/\"+ scheduledplaylist\n    let response = postServiceData(url,data);\n\n    return response\n}\n\n\nconst uploadFile = async (data)=>{\n    \n    let url = \"http://\"+ await getIpaddress()+\"/api/\" + media +upload\n\n    console.log(url)\n\n    let response = postServiceData(url,data);\n    \n    console.log(response)\n    \n    return response\n\n}\n\nconst getScehdauls = async (date1,date2)=>{\n    console.log(\"THIS BC URL: \",'http://'+await getIpaddress()+api+scheduledplaylist+'/from/'+date1+'/to/'+date2)\n\n    return axios.get('http://'+await getIpaddress()+api+scheduledplaylist+'/from/'+date1+'/to/'+date2)\n}\n\nconst getScehdaulsForChannel = async(id)=>{\n\n    //\"api/channels/channelId/shedule\"\n    \n    console.log(\"THIS BC URL: \",'http://'+await getIpaddress()+api+channels+id+\"/\"+scheduledplaylist)\n\n\n    return axios.get('http://'+await getIpaddress()+api+channels+id+\"/\"+scheduledplaylist)\n\n\n\n}\n\nconst updateSchedule = async(id,data)=>{\n\n    //\"api/channels/channelId/shedule\"\n\n\n    let url =  'http://'+await getIpaddress()+api+channels+id+\"/\"+scheduledplaylist+id\n\n    return putServiceData(url,data)\n}\n\n\nconst deleteSchedule = async(id) => {\n\n    let url =  'http://'+await getIpaddress()+api+channels+id+\"/\"+scheduledplaylist+id\n\n    return deleteServiceData(url)\n}\n\n\nconst getAllDevices = async()=>{\n    \n    let url =  \"http://\"+ await getIpaddress()+\"/api/\" + device\n\n    \n    return getServiceData(url)\n\n}\n\n\nconst getDeviceStatus = async(key)=>{\n\n    let url =  \"http://\"+ await getIpaddress()+\"/api/\" + device +\"key/\"+key\n\n    return getServiceData(url)\n\n}\n\nconst addNewDevice = async(data)=>{\n    \n    let url =  \"http://\"+ await getIpaddress()+\"/api/\" + device\n\n    return postServiceData(url,data)\n\n}\n\n\n\nconst getAllChannels = async()=>{\n    \n    let url = \"http://\"+ await getIpaddress()+\"/api/\" + channels\n\n    return getServiceData(url)\n}\n\n\n\nconst addNewChannel = async(data)=>{\n    \n    let url = \"http://\"+ await getIpaddress()+\"/api/\" + channels\n\n    return postServiceData(url,data)\n\n}\n\nconst updateChannel = async(id,data)=>{\n    \n    let url = \"http://\"+ await getIpaddress()+\"/api/\" + channels+id\n    console.log(url)\n\n    return putServiceData(url,data)\n\n}\n\nconst deleteChannel = async(id)=>{\n    \n    let url = \"http://\"+ await getIpaddress()+\"/api/\" + channels+id\n    console.log(url)\n\n    return deleteServiceData(url)\n\n}\n\n\n\n\nexport  { \n\n        uploadFile,getAllMedia,deleteMedia,\n\n        addPlaylist,getAllPlaylists,deletePlaylist,\n          \n        addScheduledEvent,getScehdaulsForChannel,getScehdauls,updateSchedule,deleteSchedule,\n         \n        getAllDevices,addNewDevice,getDeviceStatus,\n        \n        getAllChannels,addNewChannel,updateChannel,deleteChannel,\n\n        displayMessageOnNewEntry\n    \n\n        };\n","import React, {Component} from 'react'\r\n\r\nimport {getAllChannels,getDeviceStatus} from './Utils/Utils.js'\r\n\r\nexport default class TabSingleDevice extends Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            channelList: []\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n\r\n        getAllChannels().then(channels=>{\r\n\r\n            console.log(channels.data)\r\n\r\n            this.setState({channelList:channels.data})\r\n\r\n        })\r\n        console.log(this.props.id)\r\n\r\n        setInterval(()=>{\r\n\r\n\r\n            getDeviceStatus(this.props.id).then(data=>{\r\n                console.log(data)\r\n            })\r\n\r\n\r\n        },10000)\r\n\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n        \r\n        return (\r\n            <div>\r\n                <div className=\"card cardsDevicesList\">\r\n                <div className=\"card-body\">\r\n    \r\n                    <h6 className=\"card-subtitle mb-2 text-muted\">{this.props.name}</h6>                               \r\n                    <div className=\"dropdown\">\r\n                        <button className=\"btn btn-secondary dropdown-toggle btn-sm\" \r\n                        type=\"button\" id=\"dropdownMenuButton\" \r\n                        data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                            Select Channel\r\n                        </button>\r\n                        <span className=\"dot\"></span>\r\n    \r\n                        <span>\r\n                            <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\r\n                            {this.state.channelList.map(channel=>{\r\n\r\n                                return  <a className=\"dropdown-item\" href=\"#\">{channel.name}</a>\r\n\r\n                            })} \r\n\r\n                            </div>\r\n    \r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n                \r\n        </div>\r\n        )\r\n    }\r\n\r\n}\r\n","import React, { Component } from 'react'\r\nimport  TabAddDevices from './tabs_nav/TabAddDevices'\r\nimport TabSingleDevice from './TabSingleDevice'\r\n\r\nimport '../css/TabsNav.css'\r\nimport {addNewDevice,getAllDevices,displayMessageOnNewEntry} from './Utils/Utils.js'\r\n// import styled from 'styled-components'\r\nimport Alert from \"sweetalert2\";\r\n\r\n\r\nexport default class TabContentDevices extends Component{\r\n    state = {\r\n        selectedOption: null,\r\n        deviceList:[],\r\n        name:\"\",\r\n        key:\"\",\r\n        location:\"\"\r\n\r\n    };\r\n\r\n\r\n    componentDidMount(){\r\n\r\n        getAllDevices().then(devices=>{\r\n\r\n            console.log(devices)\r\n\r\n            this.setState({deviceList:devices.data})\r\n        })\r\n\r\n        \r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    handleChange = selectedOption => {\r\n        this.setState({ selectedOption });\r\n        console.log(`Option selected:`, selectedOption);\r\n    };\r\n\r\n    setName = (e) => {\r\n\r\n        this.setState({name: e.target.value})\r\n\r\n    }\r\n\r\n \r\n\r\n    setLocation = (e) => {\r\n\r\n        this.setState({location: e.target.value})\r\n\r\n    }\r\n\r\n    RegisterNewDevice = () => {\r\n\r\n        let data ={};\r\n\r\n        if(this.state.name ===\"\"  || this.state.location===\"\"){\r\n\r\n            Alert.fire({\r\n                icon: 'error',\r\n                title: 'Oops...',\r\n                text: 'Something went wrong!',\r\n              })\r\n\r\n\r\n        }\r\n\r\n        else{\r\n\r\n            data = {name:this.state.name, key:this.state.key, location:this.state.location}\r\n            addNewDevice(data).then(data=>{\r\n                console.log(data)\r\n                displayMessageOnNewEntry(data);\r\n\r\n            })\r\n\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    \r\n\r\n    render() {\r\n        const { selectedOption } = this.state;\r\n        return (\r\n\r\n            <div className=\"container\">\r\n                <TabAddDevices/>\r\n                <hr/>\r\n                <div className=\"row\">\r\n                    <div className=\"col-lg-4\">\r\n\r\n\r\n                    {this.state.deviceList.map(device=>{\r\n\r\n                                    console.log(device.key)\r\n\r\n                        return     <TabSingleDevice name={device.name} id={device.key}/>\r\n                    \r\n\r\n                    })} \r\n\r\n                    </div>\r\n\r\n                    <button type=\"button\" className=\"btn btn-primary addNewDeviceButton\" data-toggle=\"modal\" data-target=\"#add_new_device\">\r\n                    + Add new\r\n                    </button>\r\n\r\n\r\n                    <div className=\"modal fade\" id=\"add_new_device\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n                    <div className=\"modal-dialog\" role=\"document\">\r\n                        <div className=\"modal-content\">\r\n                        <div className=\"modal-header\">\r\n                            <h4 className=\"modal-title newDeviceModal\" id=\"exampleModalLabel\">New device</h4>\r\n                            <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                            <span aria-hidden=\"true\">&times;</span>\r\n                            </button>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <form>\r\n                                <div className=\"form-group\">\r\n                                    <label>Name</label>\r\n                                    <input type=\"text\" className=\"form-control\" placeholder=\"Enter device name\" onChange={this.setName.bind(this)}/>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label>Location</label>\r\n                                    <input type=\"text\" className=\"form-control\" placeholder=\"Location address\" onChange={this.setLocation.bind(this)}/>\r\n                                </div>\r\n                                <div className=\"modal-footer\">\r\n                                    <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n                                    <button type=\"button\" className=\"btn btn-primary\" onClick={this.RegisterNewDevice.bind(this)}>Save changes</button>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                \r\n            </div>\r\n\r\n          \r\n                );\r\n    }\r\n}\r\n","import React from 'react'\r\n\r\nexport default function TabDevicesDetail() {\r\n    return (\r\n        <div>\r\n            <h3><center>Device Detail</center></h3>\r\n        </div>\r\n    )\r\n}\r\n","\r\nimport React, { Component } from 'react'\r\nimport Select from 'react-select';\r\nimport TabDevicesDetail from './tabs_nav/TabDevicesDetail'\r\n\r\nimport '../css/TabsNav.css'\r\nconst channelList = [\r\n    { value: 'chocolate', label: 'Chocolate' },\r\n    { value: 'strawberry', label: 'Strawberry' },\r\n    { value: 'vanilla', label: 'Vanilla' },\r\n];\r\n\r\n\r\n\r\nexport default class TabContentDevices extends Component{\r\n    constructor(props){\r\n        super(props)\r\n            this.state= {\r\n                devicesdata:[1,2]\r\n            }\r\n    }\r\n    state = {\r\n        selectedOption: null,\r\n    };\r\n    handleChange = selectedOption => {\r\n        this.setState({ selectedOption });\r\n        console.log(`Option selected:`, selectedOption);\r\n    };\r\n    render() {\r\n        const { selectedOption } = this.state;\r\n    return (\r\n\r\n        <div className=\"tabcontent\">\r\n\r\n            <div className=\"container formForAddingDevices\">\r\n                <TabDevicesDetail></TabDevicesDetail>\r\n                <hr/>\r\n                <div className=\"row\">\r\n                    <div className=\" col-lg-8\">\r\n                        <div className=\"tab-content\">\r\n                            <h1><center><i>Device Details</i></center></h1>\r\n                            \r\n                            {/* start forms here for new device */}\r\n                            <form>\r\n                                <div className=\"form-group\">\r\n                                    <label>Device name</label>\r\n                                    <input type=\"text\" className=\"form-control\">devicesdata.name</input>\r\n                                </div>\r\n\r\n                                <label>Channel name</label>\r\n                                <div className=\"form-group\"> \r\n                                    <Select \r\n                                    value={selectedOption}\r\n                                    onChange={this.handleChange}\r\n                                    options={channelList}\r\n                                    isMulti= {false}\r\n                                    placeholder = {'Select Channel'}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label>Location name</label>\r\n                                    <input type=\"text\" className=\"form-control\" placeholder=\"Enter location\" >devicesdata.location</input>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label>Key</label>\r\n                                    <input type=\"text\" className=\"form-control\" placeholder=\"key will come here\" readOnly>devicesdata.key</input>\r\n                                </div>\r\n                                \r\n                                <button type=\"submit\" className=\"btn btn-primary submitButtonAddingDevices\">Save</button>\r\n                                </form>\r\n                                \r\n                            {/* ends here */}\r\n\r\n                        </div>\r\n                    </div>\r\n                    <div className= \"screenshotImage col-lg-4\">\r\n                        <div className=\"card\">\r\n                            <img className=\"card-img-top\" \r\n                            src=\"\r\n                            https://dad.neocities.org/resources/dog7.jpg\r\n                            \" />\r\n                        </div> \r\n                    </div>\r\n                    </div>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n    }\r\n}\r\n\r\n\r\n","import React, { Component } from 'react'\n\n\nexport default class TabSingleVideo extends Component{\n\n\n    render() {\n\n        return (\n\n            <div className=\"card-group\">\n            <div className=\"card\">\n              \n            <video width=\"320\" height=\"240\" controls>\n              <source src=\"//‪video.mp4\" type=\"video/mp4\" />\n            </video>\n\n\n\n              <div className=\"card-body\">\n                <center><h5 className=\"card-title\">{this.props.name}</h5></center>\n              </div>\n\n            </div>\n          </div>\n        )\n\n    }\n}","import React, { Component } from 'react'\r\nimport '../css/TabsNav.css'\r\nimport TabSingleVideo from './TabSingleVideo.js'\r\nimport  TabAddDevices from './tabs_nav/TabAddDevices'\r\n\r\nimport {getAllMedia,uploadFile, displayMessageOnNewEntry} from \"./Utils/Utils.js\"\r\nimport Alert from \"sweetalert2\";\r\n\r\n\r\n\r\nexport default class TabContentVideos extends Component {\r\n\r\n\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      mediaList: [],\r\n      selectedFile:null\r\n    }\r\n  }\r\n\r\n\r\n  componentDidMount() {\r\n\r\n    getAllMedia().then(media => {\r\n\r\n      console.log(media)\r\n\r\n      this.setState({mediaList:media.data})\r\n\r\n    })\r\n\r\n\r\n  }\r\n\r\n\r\n  onChangeHandler=event=>{\r\n\r\n\r\n    console.log(event.target.files[0])\r\n    this.setState({\r\n        selectedFile: event.target.files[0],\r\n        loaded: 0,\r\n      },()=>{ \r\n        console.log(this.state)\r\n      })\r\n\r\n}\r\n\r\n  onClickHandler = (e) => {\r\n\r\n    e.preventDefault()  \r\n\r\n    if(this.state.selectedFile === null){\r\n\r\n      Alert.fire({\r\n        icon: 'error',\r\n        title: 'Oops...',\r\n        text: 'Seems like you missed a few fields !'\r\n      })\r\n\r\n    }\r\n\r\n\r\n    else{\r\n\r\n  \r\n      const data = new FormData() \r\n      data.append('file', this.state.selectedFile)\r\n      uploadFile(data).then(data=>{\r\n\r\n        console.log(\"DATA\",data)\r\n\r\n        displayMessageOnNewEntry(data)\r\n\r\n    })\r\n    \r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"container\">\r\n          <TabAddDevices/>\r\n          <hr/>\r\n          <div className=\"row\">\r\n\r\n          {this.state.mediaList.map(media =>{\r\n\r\n            \r\n            return <TabSingleVideo name={media.name}/>\r\n\r\n\r\n          })}\r\n\r\n          </div>\r\n          <button type=\"button\" className=\"btn btn-primary addNewDeviceButton\" data-toggle=\"modal\" data-target=\"#add_new_device\">\r\n                + Add new video\r\n          </button>\r\n\r\n\r\n          <div className=\"modal fade\" id=\"add_new_device\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n          <div className=\"modal-dialog\" role=\"document\">\r\n            <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n                <h4 className=\"modal-title newDeviceModal\" id=\"exampleModalLabel\">New device</h4>\r\n                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n            <form>\r\n            <input type=\"file\" name=\"file\" onChange={this.onChangeHandler}/>\r\n              <hr/>\r\n              <div className=\"modal-footer\">\r\n                  <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n                  <button type=\"button\" className=\"btn btn-primary\" onClick={this.onClickHandler}>Upload</button>\r\n              </div>\r\n            </form>\r\n            </div>\r\n          </div></div></div>\r\n          </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\n\nexport default function TabChannelDetail() {\n    return (\n        <div>\n            <h3><center>Channel</center></h3>\n        </div>\n    )\n}\n","import React , {Component} from 'react'\r\nimport {deleteChannel,displayMessageOnNewEntry} from  './Utils/Utils.js'\r\nimport { Link} from 'react-router-dom'\r\n\r\nexport default class TabSingleChannel extends Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n    }\r\n\r\n\r\n    onDelete=()=>{\r\n\r\n        deleteChannel(this.props.channel_id).then(data=>{\r\n            displayMessageOnNewEntry(data)\r\n        })\r\n\r\n    }\r\n\r\n\r\n    render(){\r\n        \r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-lg-4\">\r\n                        <div className=\"card cardsDevicesList\">\r\n                            <div className=\"card-body\">\r\n    \r\n                                    <h6 className=\"card-subtitle mb-2 text-muted\">{this.props.name}</h6>                                         \r\n                                <Link to=\r\n                                            {{\r\n                                                \r\n                                                pathname:\"/schedule\",\r\n                                                state: {\r\n                                                    _id: this.props.channel_id\r\n                                                    }\r\n                                            }} \r\n                                            >\r\n\r\n                        \r\n                                            Assign Schedule\r\n                                </Link>\r\n\r\n\r\n                                <button onClick={this.onDelete.bind(this)}>Delete</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>            \r\n            </div>\r\n        )\r\n\r\n    }\r\n}\r\n","import React, { Component } from 'react'\n\nimport TabChannel from '../components/tabs_nav/TabChannel'\nimport {getAllChannels,addNewChannel,updateChannel,deleteChannel,displayMessageOnNewEntry} from  './Utils/Utils.js'\nimport '../css/TabsNav.css'\nimport TabSingleChannel from './TabSingleChannel'\nimport Alert from \"sweetalert2\";\n\n\nlet mediaList = [];\n\nexport default class TabContentChannelDetail extends Component {\n    constructor(props){\n        super(props)\n        this.state= {\n\n            channelsList:[]\n\n      \n        }\n    }\n\n\n    componentDidMount() {\n\n        getAllChannels().then(data=>{\n\n            console.log(\"THIS IS THE DATA \",data.data)\n\n            this.setState({channelsList:data.data})\n        })\n        \n    }\n\n    setName = (e) => {\n\n        this.setState({name: e.target.value})\n    \n    }\n    \n   \n    \n    RegisterNewDevice = () => {\n    \n        let data ={};\n    \n        if(this.state.name ===\"\" && this.state.key===\"\" && this.state.location===\"\"){\n    \n            Alert.fire({\n                icon: 'error',\n                title: 'Oops...',\n                text: 'Something went wrong!',\n              })\n    \n    \n        }\n    \n        else{\n    \n            data = {name:this.state.name}\n            addNewChannel(data).then(data=>{\n                displayMessageOnNewEntry(data)\n    \n            })\n    \n    \n        }\n    \n    \n    }\n \n    render() {\n        return (\n\n            <div>\n                <TabChannel/>\n                <hr/>\n                  {this.state.channelsList.map(channel=>{\n\n                    return(       <div> \n                                        \n                                    <TabSingleChannel name={channel.name} channel_id={channel._id}/>\n\n                                                                   \n                                    </div>\n                                    \n                                    \n                                    ) \n\n                    })} \n\n\n                    \n                    <button type=\"button\" className=\"btn btn-primary addNewDeviceButton\" data-toggle=\"modal\" data-target=\"#add_new_device\">\n                    + Add new\n                    </button>\n\n\n                    <div className=\"modal fade\" id=\"add_new_device\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n                        <div className=\"modal-dialog\" role=\"document\">\n                            <div className=\"modal-content\">\n                            <div className=\"modal-header\">\n                                <h4 className=\"modal-title newDeviceModal\" id=\"exampleModalLabel\">New device</h4>\n                                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                <span aria-hidden=\"true\">&times;</span>\n                                </button>\n                            </div>\n                            <div className=\"modal-body\">\n                                <form>\n                                    \n                                    <div className=\"form-group\">\n                                        <label>Name</label>\n                                        <input type=\"text\" className=\"form-control\" placeholder=\"Enter device name\" onChange={this.setName.bind(this)}/>\n                                    </div>\n                                  \n                                    <div className=\"modal-footer\">\n                                        <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\n                                        <button type=\"button\" className=\"btn btn-primary\" onClick={this.RegisterNewDevice.bind(this)}>Save changes</button>\n                                    </div>\n                                </form>\n                            </div>\n\n                        </div>\n                    </div>\n                    </div>\n\n            </div>\n     \n\n        )\n    }\n}\n","import React, { Component } from 'react'\r\nimport { CirclePicker } from 'react-color';\r\nimport Select from 'react-select';\r\nimport TabPlaylist from '../components/tabs_nav/TabPlaylist'\r\nimport {getAllMedia,deletePlaylist,displayMessageOnNewEntry} from  './Utils/Utils.js'\r\n\r\nimport '../css/TabsNav.css'\r\n\r\nlet mediaList = [\r\n];\r\n\r\nexport default class TabSinglePlaylist extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state= {\r\n            // playListData:PlayList\r\n         \r\n            mediaData:[],\r\n            mediaSelected:[],\r\n            playlistName:\"\"\r\n        }\r\n    }\r\n    handleChangeComplete = (color) => {\r\n        this.setState({ background: color.hex });\r\n    };\r\n    handleChange = selectedOption => {\r\n        this.setState({ selectedOption });\r\n        console.log(`Option selected:`, selectedOption);\r\n    };\r\n\r\n    onDelete = ()=>{\r\n\r\n        deletePlaylist(this.props.id).then(data=>{\r\n            displayMessageOnNewEntry(data)\r\n        })\r\n        \r\n    }\r\n\r\n\r\n\r\n\r\n    componentDidMount() {\r\n\r\n\r\n        getAllMedia().then(media => {\r\n\r\n            console.log(media)\r\n\r\n            this.setState({mediaData:media.data})\r\n\r\n            let mediaFiles ={value:\"\",label:\"\"};\r\n\r\n            for(let i=0;i<media.data.length;i++){\r\n\r\n                mediaFiles['value'] = media.data[i]._id\r\n                mediaFiles['label'] = media.data[i].name\r\n\r\n                mediaList.push(mediaFiles)\r\n\r\n                mediaFiles ={value:\"\",label:\"\"};\r\n\r\n            }\r\n\r\n            console.log(\"Media List \",mediaList)\r\n\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { selectedOption } = this.state;\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"card cardsDevicesList\">\r\n                    <div className=\"card-body\">\r\n                        \r\n\r\n                    <button type=\"button\" className=\"btn btn-light btn-for-playlist\" data-toggle=\"modal\" data-target=\"#playlist_details\">\r\n                        {this.props.name}\r\n                    </button>\r\n\r\n                    <button type=\"button\" className=\"btn btn-light btn-for-playlist\" data-toggle=\"modal\" data-target=\"#playlist_details\" onClick={this.onDelete.bind()}>\r\n                        Delete\r\n                    </button>\r\n\r\n\r\n\r\n                    <div className=\"modal fade\" id=\"playlist_details\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n                    <div className=\"modal-dialog\" role=\"document\">\r\n                        <div className=\"modal-content\">\r\n                        <div className=\"modal-body\">\r\n                        <form>\r\n\r\n                            <div className=\"form-group\">\r\n                                <label>                        \r\n                                    {this.props.name}\r\n                                </label>\r\n                                <input type=\"text\" className=\"form-control\" value={'here value will come safi'} />\r\n                            </div>\r\n                            <hr/>\r\n                            <label>Edit media</label>\r\n                            <div className=\"form-group\"> \r\n                                <Select \r\n                                value={selectedOption}\r\n                                onChange={this.handleChange}\r\n                                options={mediaList}\r\n                                isMulti= {true}\r\n                                placeholder = {'Choose videos'}\r\n                                />\r\n                            </div>\r\n                            <hr/>\r\n\r\n\r\n                            <div className=\"modal-footer\">\r\n                                <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n                                <button type=\"button\" className=\"btn btn-primary\">Update</button>\r\n                            </div>\r\n                        </form>\r\n                        </div>\r\n                    </div></div></div>\r\n    \r\n                    </div>\r\n                </div>\r\n\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { CirclePicker } from 'react-color';\r\nimport Select from 'react-select';\r\nimport TabPlaylist from '../components/tabs_nav/TabPlaylist'\r\nimport TabSinglePlaylist from './TabSinglePlaylist.js'\r\nimport {getAllPlaylists,addPlaylist,getAllMedia,displayMessageOnNewEntry} from  './Utils/Utils.js'\r\nimport Alert from \"sweetalert2\";\r\nimport '../css/TabsNav.css'\r\n\r\n\r\nlet mediaList = [\r\n];\r\n\r\nexport default class TabContentChannelDetail extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state= {\r\n            // playListData:PlayList\r\n            selectedOption: null,\r\n            background: '#fff',\r\n            playListData : [],\r\n            mediaData:[],\r\n            mediaSelected:[],\r\n            playlistName:\"\"\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n\r\n        getAllPlaylists().then(playlist => {\r\n\r\n            console.log(playlist.data)\r\n\r\n            this.setState({playListData:playlist.data})\r\n\r\n        })\r\n\r\n\r\n        getAllMedia().then(media => {\r\n\r\n            console.log(media)\r\n\r\n            this.setState({mediaData:media.data})\r\n\r\n            let mediaFiles ={value:\"\",label:\"\"};\r\n\r\n            for(let i=0;i<media.data.length;i++){\r\n\r\n                mediaFiles['value'] = media.data[i]._id\r\n                mediaFiles['label'] = media.data[i].name\r\n\r\n                mediaList.push(mediaFiles)\r\n\r\n                mediaFiles ={value:\"\",label:\"\"};\r\n\r\n            }\r\n\r\n            console.log(\"Media List \",mediaList)\r\n\r\n        })\r\n    }\r\n\r\n\r\n\r\n    setName=(e) => {\r\n\r\n        console.log(e.target.value)\r\n        this.setState({playlistName:e.target.value})\r\n    }\r\n\r\n    findByKey =(key, value) =>{\r\n        return (item, i) => item[key] === value\r\n    }\r\n\r\n\r\n    AddnewPlaylist=()=>{\r\n\r\n       let data={}\r\n\r\n        if(this.state.playlistName===\"\" || this.state.selectedOption==null){\r\n\r\n            Alert.fire({\r\n                icon: 'error',\r\n                title: 'Oops...',\r\n                text: 'You missed a few fields!',\r\n              })\r\n\r\n        }\r\n\r\n        else{\r\n\r\n            let media =[]\r\n\r\n            for(let i=0;i<this.state.selectedOption.length;i++){\r\n            \r\n                media.push(this.state.selectedOption[i][\"value\"])\r\n\r\n            }\r\n\r\n            console.log(media)\r\n\r\n            data  = {name:this.state.playlistName,color:this.state.background,media:media}\r\n\r\n            addPlaylist(data).then(data=>{\r\n\r\n                displayMessageOnNewEntry(data);\r\n            \r\n            })\r\n\r\n            }\r\n            \r\n            \r\n        }\r\n\r\n    \r\n\r\n    handleChangeComplete = (color) => {\r\n        this.setState({ background: color.hex });\r\n    };\r\n    handleChange = selectedOption => {\r\n        this.setState({ selectedOption });\r\n        console.log(`Option selected:`, selectedOption);\r\n\r\n    };\r\n    render() {\r\n        const { selectedOption } = this.state;\r\n        return (\r\n            <div className=\"container\">\r\n                <TabPlaylist></TabPlaylist>\r\n                <hr/>\r\n                <div className=\"row\">\r\n                    <div className=\"col-lg-4\">\r\n                            {this.state.playListData.map(playlist =>{\r\n\r\n                                return <TabSinglePlaylist name ={playlist.name} id={playlist._id} />\r\n                    \r\n                            })}\r\n     \r\n                    </div>\r\n                </div>\r\n            <button type=\"button\" className=\"btn btn-primary addNewDeviceButton\" data-toggle=\"modal\" data-target=\"#add_new_playlist\">\r\n                + Create new PlayList\r\n            </button>\r\n\r\n\r\n                    <div className=\"modal fade\" id=\"add_new_playlist\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n                    <div className=\"modal-dialog\" role=\"document\">\r\n                        <div className=\"modal-content\">\r\n                        <div className=\"modal-header\">\r\n                            <h4 className=\"modal-title newDeviceModal\" id=\"exampleModalLabel\">New PlayList</h4>\r\n                            <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                            <span aria-hidden=\"true\">&times;</span>\r\n                            </button>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                        <form>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label>Name : </label>\r\n                            <input type=\"text\" className=\"form-control\" placeholder=\"Enter playlist name\" onChange={this.setName.bind(this)} />\r\n                        </div>\r\n                        <hr/>\r\n                        <div className=\"form-group\">\r\n                            <label>Color : </label>\r\n                            <CirclePicker className=\"colorPickerInPlayList\"\r\n                                    color={ this.state.background }\r\n                                    onChangeComplete={ this.handleChangeComplete }\r\n                            />\r\n                        </div>\r\n                        <label>Select media</label>\r\n                        <div className=\"form-group\"> \r\n                            <Select \r\n                            value={selectedOption}\r\n                            onChange={this.handleChange}\r\n                            options={mediaList}\r\n                            isMulti= {true}\r\n                            placeholder = {'Choose videos'}\r\n                            />\r\n                        </div>\r\n                        <hr/>\r\n\r\n\r\n                        <div className=\"modal-footer\">\r\n                            <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n                            <button type=\"button\" className=\"btn btn-primary\" onClick={this.AddnewPlaylist.bind(this)}>Upload</button>\r\n                        </div>\r\n                        </form>\r\n                        </div>\r\n                    \r\n                    </div>\r\n                    \r\n                    </div>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\nimport { Col, Row } from \"react-bootstrap\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport interactionPlugin, { Draggable } from \"@fullcalendar/interaction\";\nimport Alert from \"sweetalert2\";\nimport \"@fullcalendar/core/main.css\";\nimport \"@fullcalendar/daygrid/main.css\";\nimport \"@fullcalendar/timegrid/main.css\";\nimport { getAllPlaylists,addScheduledEvent,getScehdaulsForChannel,updateSchedule,deleteSchedule} from  './Utils/Utils.js'\nimport './CalenderStyles.css'\n\n\nclass Calendar extends Component {\n\n  calendarComponentRef = React.createRef();\n\n  constructor(props){\n    super(props)\n    \n      this.state = {\n        calendarEvents: [],\n        events: [],\n        scheduledEvents: [],\n        updatedEvents: [],\n        channelId:\"\"\n      };\n  }\n\n\n  getLastSunday(d){\n    var t = new Date(d);\n    var lastSunday = t.setDate(t.getDate() - t.getDay());\n\n    console.log(lastSunday)\n\n    return t;\n  }\n\n\n  getNextSunday(d){\n\n    var t = this.getLastSunday(d)\n    var nextSunday = new Date(t.getTime()+ + 7 * 24 * 60 * 60 * 1000)\n    console.log(nextSunday)\n\n    return nextSunday;\n  }\n\n\n  populateCalendar(date){\n\n    getScehdaulsForChannel(this.props.location.state._id)\n    .then(\n      data=>{\n\n        console.log(\"OK\",data)\n\n        let obj = {id:\"\",title:\"\",start:null,end:null,playlist:\"\"};\n\n        let schedule = []\n\n        for(let i = 0; i <data.data.length; i++){\n\n          obj.id = data.data[i]._id\n          obj.playlist=data.data[i].playlist._id\n          obj.title = data.data[i].playlist.name\n          obj.start = data.data[i].start_time\n          obj.end = data.data[i].end_time\n\n          schedule.push(obj)\n\n          obj = {id:\"\",title:\"\",start:null,end:null};\n        }\n        this.setState({calendarEvents : schedule})\n\n\n      })\n  }\n\n  componentDidMount() {\n\n    this.setState({channelId:this.props.location.state._id})\n\n    console.log(this.props.location.state._id)\n\n    let CalendarState = this.calendarComponentRef.current.getApi().state;\n    \n    CalendarState.currentDate = new Date();\n    \n    let date  =CalendarState.currentDate  \n\n    console.log(date)\n\n\n    this.populateCalendar(date)\n\n    getAllPlaylists().then(data=>{\n\n        //TODO make this into a funtion\n\n        let obj = {id:\"\",title:\"\",color:\"\"};\n\n        let playlists = [];\n\n        for(let i=0; i<data.data.length; i++){\n\n            obj.id  = data.data[i]._id;\n            obj.title =data.data[i].name;\n            obj.color = data.data[i].color;\n\n            playlists.push(obj)\n            obj = {id:\"\",title:\"\",color:\"\"};\n          }\n\n\n        //-------------------------\n\n        this.setState((prevState) => ({\n          \n          events: playlists\n            \n          }), \n          \n          () => {\n          \n              console.log('After Element added', this.state);\n          \n              }); \n      })\n\n    let draggableEl = document.getElementById(\"external-events\");\n    \n    new Draggable(draggableEl, {\n \n      itemSelector: \".fc-event\",\n      eventData: function(eventEl) {\n\n        let title = eventEl.getAttribute(\"title\");\n        let id = eventEl.getAttribute(\"data\");\n    \n        return {\n \n          title: title,\n          id: id\n \n        };\n \n      }\n \n    });\n\n  }\n\n  eventClick = eventClick => {\n    \n    Alert.fire({\n      title: eventClick.event.title,\n      html:\n        `<div class=\"table-responsive\">\n      <table class=\"table\">\n      <tbody>\n      <tr >\n      <td>Title</td>\n      <td><strong>` +\n        eventClick.event.title +\n        `</strong></td>\n      </tr>\n      <tr >\n      <td>Start Time</td>\n      <td><strong>\n      ` +\n        eventClick.event.start +\n        `\n      </strong></td>\n      </tr>\n      </tbody>\n      </table>\n      </div>`,\n\n      showCancelButton: true,\n      confirmButtonColor: \"#d33\",\n      cancelButtonColor: \"#3085d6\",\n      confirmButtonText: \"Remove Event\",\n      cancelButtonText: \"Close\"\n    })\n    .then(result => {\n        if (result.value) {\n    \n          let id = eventClick.event._def.publicId\n\n          deleteSchedule(id).then(data => {\n\n\n            if(data !==null) {\n\n            \n            if(data.status === 200){\n              eventClick.event.remove(); // It will remove event from the calendar\n              Alert.fire(\"Deleted!\", \"Your Event has been deleted.\", \"success\");\n            }\n            else{\n              Alert.fire(\"Could not delete!\", \"Check Internet connection and try again.\", \"failed\"); \n            }\n\n          }\n\n          else{\n            Alert.fire(\"Could not delete!\", \"Something went wrong try reloading the page.\", \"failed\"); \n            \n          }\n          })\n\n        }\n      });\n    };\n\n\n  appendToScheduledEvent(event,arg) {\n    let obj =  arg;\n\n    this.setState((prevState) => ({\n      scheduledEvents: prevState.scheduledEvents.concat(event)\n\n    }), \n    \n    () => {\n        console.log('After scheduledPlayList added', this.state);\n        this.onSave(event,obj)\n      }); \n    \n  }\n\n\n  appendToUpdateEvent(objUpdate){\n\n    this.setState((prevState) => ({\n      updatedEvents: prevState.updatedEvents.concat(objUpdate)\n\n    }), \n    \n    () => {\n        console.log('After scheduledPlayList added', this.state);\n        this.onUpdate(objUpdate)\n      }); \n\n  }\n  \n  eventReceive = (arg) => { // bind with an arrow function\n    \n    console.log(\"eventRecived Called\", arg);\n\n     let test=arg.event\n     let start=(test._instance.range.start).toUTCString()+\"+0500\";\n     let end=(test._instance.range.end).toUTCString()+\"+0500\";\n\n\n     let scheduledPlayList = {\n       start_time: start,\n       end_time: end,\n       playlist: test._def.publicId,\n     }    \n    this.appendToScheduledEvent(scheduledPlayList,arg)\n  }\n\n  drop = (arg) => { // bind with an arrow function\n    console.log(\"dropped called\",arg)\n    console.log(\"Delta Date: \",arg.endDelta)\n    console.log(\"ID: \",arg.event._def.publicId)\n\n    console.log(arg)\n\n    let start =  arg.event._instance.range.start.toUTCString()+\"+0500\"\n    let end =  arg.event._instance.range.end.toUTCString()+\"+0500\"\n    let id = arg.event._def.sourceId\n\n    if(id==\"1\"){\n      id = arg.event._def.publicId;\n    }\n\n    let scheduledPlayList = {\n      start_time: start,\n      end_time: end,\n      _id: id\n    }    \n   this.appendToUpdateEvent(scheduledPlayList)\n    \n  }\n\n   \n\n\n  eventResized = (arg) => {\n    console.log(\"eventResized called\",arg)\n    console.log(\"Delta Date: \",arg.endDelta)\n    console.log(\"ID: \",arg.event._def.publicId)\n    console.log(\"new Range: \", arg.event._instance.range)\n\n    let start =  arg.event._instance.range.start.toUTCString()+\"+0500\"\n    let end =  arg.event._instance.range.end.toUTCString()+\"+0500\"\n    let id = arg.event._def.sourceId\n\n    console.log(arg)\n\n\n    if(id==\"1\"){\n      id = arg.event._def.publicId;\n    }\n\n    let scheduledPlayList = {\n      start_time: start,\n      end_time: end,\n      _id: id\n    }    \n    this.appendToUpdateEvent(scheduledPlayList)\n  }\n\n  onSave = async (event,obj) => {\n      \n        console.log(event)\n\n        let dataObj = await addScheduledEvent(this.props.location.state._id,event)\n\n            obj.event._def.sourceId =   dataObj.data.saved._id ;\n\n        console.log(\"ID AFTER\", obj.event._def.sourceId)      \n        \n  }  \n\n\n\n  onUpdate= (req) =>{\n\n    console.log(\"ON UPDATE  \",req)\n    let update = {\n      start_time:req.start_time,  \n      end_time:req.end_time,\n    }\n\n    console.log(\"UPDATED: \", req)\n\n    updateSchedule(req._id,update).then(data=>{\n      console.log(data)\n    })\n\n\n  }\n\n  render() {\n    return (\n      <div className=\"animated fadeIn p-4 demo-app\" >\n        <Row>\n\n        <Col>\n          \n          <button id=\"SaveButton\" >Save</button>\n          \n        </Col>\n\n\n\n        </Row>\n\n\n        <Row>\n\n\n\n          <Col >\n            <div\n              id=\"external-events\"\n            >\n              <p align=\"center\">\n                <strong> Playlists</strong>\n              </p>\n              {this.state.events.map(event => (\n                <div\n                  className=\"fc-event\"\n                  title={event.title}\n                  data={event.id}\n                  key={event.id}\n                  id={event.id+\" playlist\"}\n                >\n                  {event.title}\n                </div>\n              ))}\n            </div>\n          </Col>\n\n\n\n          <Col>\n            <div className=\"demo-app-calendar\" id=\"mycalendartest\">\n              <FullCalendar\n                defaultView=\"timeGridWeek\"\n                header={{\n                  left: \"prev,next today\",\n                  center: \"title\",\n                  right: \"timeGridWeek,timeGridDay,listWeek\"\n                }}\n               \n                ignoreTimezone={true}\n                rerenderDelay={0}\n                eventDurationEditable={true}\n                editable={true}\n                droppable={true}\n                defaultDate={new Date()}\n                eventResizableFromStart = {true}\n                plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}\n                ref={this.calendarComponentRef}\n                weekends={this.state.calendarWeekends}\n                events={this.state.calendarEvents}\n                eventDrop={this.drop}\n                eventDragStop =  {this.eventChanged}\n                eventResize = {this.eventResized}\n                eventReceive={this.eventReceive}\n                eventClick={this.eventClick}\n              />\n            </div>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nexport default Calendar;","import React from 'react'\r\nimport {Link ,NavLink } from 'react-router-dom'\r\n\r\n\r\nexport default function navbar() {\r\n    return (\r\n        <nav>\r\n\r\n\r\n            <div className=\"wrapper\">\r\n            <div className=\"sidebar\">\r\n                <img src={require('../images/cybrnode-logo.png')} width=\"200px\" />\r\n                <hr/>\r\n                    <div className = \"col-lg-4\">\r\n                        <ul className=\"nav-links\">\r\n                            <li className=\"link-wrapper\">\r\n                                <NavLink to=\"/devicesDetail\" activeClassName=\"active\">\r\n                                    Devices\r\n                                </NavLink>\r\n                            </li>\r\n                            <li className=\"link-wrapper\">\r\n                                <NavLink to=\"/mediaDetail\" activeClassName=\"active\">\r\n                                    Videos\r\n                                </NavLink>\r\n                            </li>\r\n                            <li className=\"link-wrapper\">\r\n                                <NavLink to=\"/playListDetail\" activeClassName=\"active\">\r\n                                    Playlist\r\n                                </NavLink>\r\n                            </li>\r\n                            <li className=\"link-wrapper\">\r\n                                <NavLink to=\"/channelDetail\" activeClassName=\"active\">\r\n                                    Channel\r\n                                </NavLink>\r\n                            </li>\r\n                        </ul>    \r\n                    </div> \r\n                </div>\r\n            </div> \r\n        </nav>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nimport { Tab, Tabs,TabList ,TabPanel } from \"react-tabs\";\r\n\r\nimport TabPlaylist from './tabs_nav/TabPlaylist'\r\nimport '../css/TabsNav.css'\r\nimport TabContentDevices from './TabContentDevices';\r\nimport TabContentDevicesDetail from './TabContentDevicesDetail';\r\nimport TabContentVideos from './TabContentVideos';\r\nimport TabChannelDetail from './TabChannelDetail';\r\nimport {cybrnodelogo} from '../images/cybrnode-logo.png'\r\nimport TabPlaylistDetail from './TabPlaylistDetail'\r\nimport Schedule from './Schedule'\r\n\r\nimport Nav from './navbar'\r\nimport {BrowserRouter as Router,Switch, Route } from 'react-router-dom'\r\n\r\nexport default class TabComponent extends Component {\r\n    state ={\r\n        tabIndex : 0\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Router>\r\n                    <Nav/>\r\n                    <Switch>\r\n                        <Route path=\"/devicesDetail\" component={TabContentDevices}/>\r\n                        <Route path=\"/mediaDetail\" component={TabContentVideos}/>\r\n                        <Route path=\"/playListDetail\" component={TabPlaylistDetail}/>\r\n                        <Route path=\"/channelDetail\" component={TabChannelDetail}/>\r\n                        <Route path=\"/channelDetail\" component={TabChannelDetail}/>\r\n                        <Route path=\"/schedule\" component={Schedule}/>\r\n\r\n                    </Switch>\r\n    \r\n                </Router>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","// Our main component\r\n// we will render all our components here : header, tabs, footer\r\n\r\n\r\nimport React, { Component } from 'react'\r\nimport  TabComponent from '../components/TabComponent'\r\n\r\nexport default class Main extends Component {\r\n    render() {\r\n        return (\r\n            <TabComponent/>\r\n            \r\n        )\r\n    }\r\n}\r\n","import React from 'react';\nimport './css/App.css';\n\nimport Main from './pages/index'\nimport Schedule from './components/Schedule.js'\n\nimport { Switch , Route} from 'react-router-dom'\n\nfunction App() {\n  return (\n    <Switch>\n      <Route path=\"/\" component={Main} />\n      \n    </Switch>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.css'\nimport 'bootstrap/dist/js/bootstrap.js'\nimport 'bootstrap/dist/js/bootstrap.min.js'\nimport 'bootstrap/dist/js/bootstrap.bundle.js'\n\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter as Router} from 'react-router-dom';\n\n\nReactDOM.render(\n\n    <Router>\n        <App />\n    </Router>\n    \n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/cybrnode-logo.c283d22b.png\";"],"sourceRoot":""}